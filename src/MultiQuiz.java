/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jalac9997
 */
public class MultiQuiz extends javax.swing.JFrame {
    //Globla Variables
    String questionDisplay = "One";
    int questionCorrect = 0;
    int questionIncorrect = 0;
    double percentageCorrect = 0;
    
    // Setup Questions
    String quOneText = "What is the name of this flag? ~ A)Pearson Pendant B)La Tricoleur C)The Triple Leaf D)Drapeau du Cote"; //#1 + ANS = A
    String quTwoText = "What is the name of this flag? ~ A)Flaag Deutche B)Prinservlag C)Des Nederlandes D)Lorangistes"; //#2 + ANS = B
    String quThreeText = "This flag is from what Nation? ~ A)USA B)United Netherlands C)Liberia D)Libya"; //#3 + ANS = C
    String quFourText = "This flag is from what Nation? ~ A)Uruguay B)Paraguay C)California D)Argentina"; //#4 + ANS = D
    String quFiveText = "How many American fags were planted on the moon? ~ A)6 B)10 C)12 d) 4"; //#5 + ANS = A
    
    /**
     * Creates new form MultiQuiz
     */
    public MultiQuiz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        sideBackgroundPanel = new javax.swing.JPanel();
        questionsCorrectLabel = new javax.swing.JLabel();
        questionsIncorrectLabel = new javax.swing.JLabel();
        percentageCorrectLabel = new javax.swing.JLabel();
        questionsCorrectOutputLabel = new javax.swing.JLabel();
        questionsIncorrectOutputLabel = new javax.swing.JLabel();
        percentageCorrectOutputLabel = new javax.swing.JLabel();
        questionAreaScrollPane = new javax.swing.JScrollPane();
        questionOutputTextArea = new javax.swing.JTextArea();
        flagDisplayLabel = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        inputAnswerField = new javax.swing.JTextField();
        feedbackLabel = new javax.swing.JLabel();
        confirmButtonOne = new javax.swing.JButton();
        test = new javax.swing.JLabel();
        confirmButtonTwo = new javax.swing.JButton();
        confirmButtonThree = new javax.swing.JButton();
        confirmButtonFour = new javax.swing.JButton();
        confirmButtonFive = new javax.swing.JButton();
        confirmButtonDone = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(209, 255, 243));
        backgroundPanel.setBorder(new javax.swing.border.MatteBorder(null));

        titleLabel.setFont(new java.awt.Font("Superheterodyne", 0, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 102, 0));
        titleLabel.setText("Expert Flag Quiz");

        sideBackgroundPanel.setBackground(new java.awt.Color(204, 255, 204));
        sideBackgroundPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        questionsCorrectLabel.setText("Questions Correct:");

        questionsIncorrectLabel.setText("Questions Incorrect:");

        percentageCorrectLabel.setText("Percentage Correct:");

        questionsCorrectOutputLabel.setText("~");

        questionsIncorrectOutputLabel.setText("~");

        percentageCorrectOutputLabel.setText("~");

        javax.swing.GroupLayout sideBackgroundPanelLayout = new javax.swing.GroupLayout(sideBackgroundPanel);
        sideBackgroundPanel.setLayout(sideBackgroundPanelLayout);
        sideBackgroundPanelLayout.setHorizontalGroup(
            sideBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBackgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sideBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionsCorrectLabel)
                    .addComponent(questionsIncorrectLabel)
                    .addComponent(percentageCorrectLabel)
                    .addComponent(questionsIncorrectOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(questionsCorrectOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(percentageCorrectOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        sideBackgroundPanelLayout.setVerticalGroup(
            sideBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBackgroundPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(questionsCorrectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(questionsCorrectOutputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(questionsIncorrectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(questionsIncorrectOutputLabel)
                .addGap(64, 64, 64)
                .addComponent(percentageCorrectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(percentageCorrectOutputLabel)
                .addGap(51, 51, 51))
        );

        questionOutputTextArea.setEditable(false);
        questionOutputTextArea.setColumns(20);
        questionOutputTextArea.setLineWrap(true);
        questionOutputTextArea.setRows(2);
        questionAreaScrollPane.setViewportView(questionOutputTextArea);

        startButton.setFont(new java.awt.Font("TI Uni", 1, 11)); // NOI18N
        startButton.setText("START");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        inputAnswerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAnswerFieldActionPerformed(evt);
            }
        });

        feedbackLabel.setText("~");

        confirmButtonOne.setText("CONFIRM 1");
        confirmButtonOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonOneActionPerformed(evt);
            }
        });

        confirmButtonTwo.setText("CONFIRM 2");
        confirmButtonTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonTwoActionPerformed(evt);
            }
        });

        confirmButtonThree.setText("CONFIRM 3");
        confirmButtonThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonThreeActionPerformed(evt);
            }
        });

        confirmButtonFour.setText("CONFIRM 4");
        confirmButtonFour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonFourActionPerformed(evt);
            }
        });

        confirmButtonFive.setText("CONFIRM 5");
        confirmButtonFive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonFiveActionPerformed(evt);
            }
        });

        confirmButtonDone.setText("DONE");
        confirmButtonDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonDoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addComponent(feedbackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inputAnswerField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(flagDisplayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(startButton)
                                        .addGap(110, 110, 110)))
                                .addGap(16, 16, 16)))
                        .addGap(16, 16, 16)
                        .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(titleLabel)
                                .addComponent(questionAreaScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(confirmButtonFour)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(confirmButtonFive)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(confirmButtonDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(confirmButtonOne)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(confirmButtonTwo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(confirmButtonThree))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(sideBackgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideBackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flagDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(questionAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputAnswerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(feedbackLabel)))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButtonOne)
                    .addComponent(confirmButtonThree)
                    .addComponent(confirmButtonTwo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButtonFour)
                    .addComponent(confirmButtonFive)
                    .addComponent(confirmButtonDone))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // Declare variables
            //double diameterRequested = Double.parseDouble(diameterInputField.getText());
                //percCorrect = ((double)totalCorrect/(double)totalRolls)*100 ;
                //percCorrect = percCorrect * 100 ;
                //percCorrect = Math.round(percCorrect) ;
                //percCorrect = percCorrect / 100 ;
        
        // Display Questions
        questionOutputTextArea.setText(quOneText);
        //image
        //Update Counters
        questionsCorrectOutputLabel.setText(""+questionCorrect);
        questionsIncorrectOutputLabel.setText(""+questionIncorrect);
        
    }//GEN-LAST:event_startButtonActionPerformed

    private void inputAnswerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAnswerFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAnswerFieldActionPerformed

    private void confirmButtonOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonOneActionPerformed
        // Get Answers
        String userAnswer = (inputAnswerField.getText());
        
        if (questionDisplay.equals("One") && userAnswer.equals("A") || userAnswer.equals("a")){
            questionCorrect = questionCorrect + 1;
            questionsCorrectOutputLabel.setText(""+questionCorrect);
            inputAnswerField.setText("");
            questionDisplay = "Two";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quTwoText);
        }
        else {
            questionIncorrect = questionIncorrect + 1;
            questionsIncorrectOutputLabel.setText(""+questionIncorrect);
            inputAnswerField.setText("");
            questionDisplay = "Two";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quTwoText);
        }
          
    }//GEN-LAST:event_confirmButtonOneActionPerformed

    private void confirmButtonTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonTwoActionPerformed
        // Get Answers
        String userAnswer = (inputAnswerField.getText());
        
        if (userAnswer.equals("B") || userAnswer.equals("b")){
            questionCorrect = questionCorrect + 1;
            questionsCorrectOutputLabel.setText(""+questionCorrect);
            inputAnswerField.setText("");
            questionDisplay = "Three";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
        else {
            questionIncorrect = questionIncorrect + 1;
            questionsIncorrectOutputLabel.setText(""+questionIncorrect);
            inputAnswerField.setText("");
            questionDisplay = "Three";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
        
    }//GEN-LAST:event_confirmButtonTwoActionPerformed

    private void confirmButtonThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonThreeActionPerformed
        // Get Answers
        String userAnswer = (inputAnswerField.getText());
        
        if (userAnswer.equals("C") || userAnswer.equals("c")){
            questionCorrect = questionCorrect + 1;
            questionsCorrectOutputLabel.setText(""+questionCorrect);
            inputAnswerField.setText("");
            questionDisplay = "Four";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
        else {
            questionIncorrect = questionIncorrect + 1;
            questionsIncorrectOutputLabel.setText(""+questionIncorrect);
            inputAnswerField.setText("");
            questionDisplay = "Four";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
    }//GEN-LAST:event_confirmButtonThreeActionPerformed

    private void confirmButtonFourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonFourActionPerformed
        // Get Answers
        String userAnswer = (inputAnswerField.getText());
        
        if (questionDisplay.equals("Four") && userAnswer.equals("D") || userAnswer.equals("d")){
            questionCorrect = questionCorrect + 1;
            questionsCorrectOutputLabel.setText(""+questionCorrect);
            inputAnswerField.setText("");
            questionDisplay = "Five";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
        else {
            questionIncorrect = questionIncorrect + 1;
            questionsIncorrectOutputLabel.setText(""+questionIncorrect);
            inputAnswerField.setText("");
            questionDisplay = "Five";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
    }//GEN-LAST:event_confirmButtonFourActionPerformed

    private void confirmButtonFiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonFiveActionPerformed
        // Get Answers
        String userAnswer = (inputAnswerField.getText());
        
        //Compare and Check if its Right
        if (questionDisplay.equals("Five") && userAnswer.equals("A") || userAnswer.equals("a")){
            questionCorrect = questionCorrect + 1;
            questionsCorrectOutputLabel.setText(""+questionCorrect);
            inputAnswerField.setText("");
            questionDisplay = "Done";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
        else {
            questionIncorrect = questionIncorrect + 1;
            questionsIncorrectOutputLabel.setText(""+questionIncorrect);
            inputAnswerField.setText("");
            questionDisplay = "Done";
            test.setText(questionDisplay);
            questionOutputTextArea.setText(quThreeText);
        }
    }//GEN-LAST:event_confirmButtonFiveActionPerformed

    private void confirmButtonDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonDoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmButtonDoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultiQuiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton confirmButtonDone;
    private javax.swing.JButton confirmButtonFive;
    private javax.swing.JButton confirmButtonFour;
    private javax.swing.JButton confirmButtonOne;
    private javax.swing.JButton confirmButtonThree;
    private javax.swing.JButton confirmButtonTwo;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JLabel flagDisplayLabel;
    private javax.swing.JTextField inputAnswerField;
    private javax.swing.JLabel percentageCorrectLabel;
    private javax.swing.JLabel percentageCorrectOutputLabel;
    private javax.swing.JScrollPane questionAreaScrollPane;
    private javax.swing.JTextArea questionOutputTextArea;
    private javax.swing.JLabel questionsCorrectLabel;
    private javax.swing.JLabel questionsCorrectOutputLabel;
    private javax.swing.JLabel questionsIncorrectLabel;
    private javax.swing.JLabel questionsIncorrectOutputLabel;
    private javax.swing.JPanel sideBackgroundPanel;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel test;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
